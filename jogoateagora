#include <raylib.h>
#include <stdio.h>



void movimentacao(Rectangle* Jorger)
{
        if (IsKeyDown(KEY_DOWN))
        {
            (Jorger->y)+= 4; //y cresce para baixo.
        }
        else if(IsKeyDown(KEY_UP))
        {
            (Jorger->y) -= 4;
        }
        else if(IsKeyDown(KEY_RIGHT))
        {
            (Jorger->x) +=4;
        }
        else if(IsKeyDown(KEY_LEFT))
        {
            (Jorger->x) -=4;
        }
            
    
}

void colisao(Rectangle* Jorger)
{ 
           if(IsKeyDown(KEY_LEFT))
           
           {
               (Jorger->x)+=4;
               
           }
           if(IsKeyDown(KEY_RIGHT))
           {
               (Jorger->x)-=4;
               
           }
           if(IsKeyDown(KEY_UP))
           {
               (Jorger->y)+=4;
           }
           if(IsKeyDown(KEY_DOWN))
           {
               (Jorger->y)-=4;
               
           } 
    
}


void tamanhotela(Rectangle* Jorger, int screenHeight,int screenWidth)
{
        if(Jorger->x+53>screenWidth)
        {
            Jorger->x = screenWidth-53;
        }
        else if(Jorger->x-8<0) 
        {
            Jorger->x=0+8;
        }
        else if(Jorger->y+52>screenHeight)
        {
            Jorger->y=screenHeight-52;
        }
        else if(Jorger->y-10<0)
        {
            Jorger->y=0+10;
        }
}


void desenharconflito(Texture2D fala)
{
     
     DrawTexture(fala,0,570,RAYWHITE);
     DrawText("Conflito: Ir para a festa de Carla.\nAjude Jorge a deixar seus pensamentos mais funcionais",250,650,20,WHITE);
     DrawText(" Aperte A para: Ninguém me quer lá\nAperte B para: Vai ser divertido",220,700,20,WHITE);
     
}
void desenharconflito2(Texture2D fala)
{
     
     DrawTexture(fala,0,570,RAYWHITE);
     DrawText("Conflito: Na festa, alguém te chamou para dançar.\n",250,650,20,WHITE);
     DrawText(" Aperte A para: Não. Vou passar vergonha\nAperte B para: Sim. Estou entre amigos, ninguém vai ligar",220,680,20,WHITE);
     
}
void desenharconflito3(Texture2D fala)
{
     
     DrawTexture(fala,0,570,RAYWHITE);
     DrawText("Conflito: Alguém está olhando para você.\n",250,650,20,WHITE);
     DrawText(" Aperte A para: A algo de errado comigo\nAperte B para: Talvez ela queira conversar",220,680,20,WHITE);
     
}
void batalhafuncao(Texture2D fala,int* ruim, int* batalha)
{
     *ruim=2;
    //while(IsKeyPressed(KEY_A)!=1 && IsKeyPressed(KEY_B)!=1)
    {
        desenharconflito(fala);
    }
    
    //se aperta A o jogo fecha...???
    if(IsKeyPressed(KEY_A))
    {
        *ruim++;
        if(*ruim==3)
        {
            //while(IsKeyPressed(KEY_A)!=1 && IsKeyPressed(KEY_B)!=1)
            {
                 desenharconflito2(fala);
            }  
            batalhafuncao(fala,&(*ruim),&(*batalha));
        }
        else
        {
            //while(IsKeyPressed(KEY_A)!=1 && IsKeyPressed(KEY_B)!=1)
            {
                desenharconflito3(fala);
            } 
            batalhafuncao(fala,&(*ruim),&(*batalha));
            *batalha=0;
        }
        
    }
    //não mudei essa parte como fiz na de cima pq a de cima n está funcionando direito
    else if(IsKeyPressed(KEY_B))
    {
        *ruim--;
        if(*ruim==1)
        {
            desenharconflito2(fala);
        }
        else
        {
            desenharconflito3(fala);
            *batalha=0;
        }
        
        
    }
    
    /*if(IsKeyPressed(KEY_W))
    {
        if((*posic)>708)
        {
            (*posic) -= 30;
        }
      // if(IsKeyDown(KEY_W) && )
                 
        
    }
    if(IsKeyPressed(KEY_S))
    {
        if((*posic)<790)
        {
            (*posic) += 30;
        }
        //ruim--;
        
    }
    
    
     DrawCircle(280,(*posic),10,RED);*/
      
    
}

int main(void)
{
    const int screenWidth = 1366; //dimenssão da minha tela
    const int screenHeight = 768;

    InitWindow(screenWidth, screenHeight, "raylib template - ip");

    SetTargetFPS(60);    
   
    
    //Carregando imagem e transformando em textura:
    
    Image Quarto = LoadImage("/jogoip/Quarto002.png"); //diretorio apartir do C: com as \ invertidas (/);
    Image Jorgeim = LoadImage("/jogoip/Jorge01.png");
    Image Karolim = LoadImage("/jogoip/Karol01.png");
    Image Guilhermeim = LoadImage("/jogoip/Guilherme01.png");
    Image memoriasim = LoadImage("/jogoip/memorias.png");
    Image monstro = LoadImage("/jogoip/monstro2.png");
    Image fala = LoadImage("/jogoip/fala.png");
    ImageResize (&Jorgeim,144,104); //144,104,(108,78) - Aumentando a imagem original
    ImageResize (&Karolim,144,104);
    ImageResize (&Guilhermeim,144,104);
    ImageResize (&Quarto,1366,788); //passar o endereço pq ele modifica a imagem original.
    ImageResize (&fala,1366,300);
    ImageResize (&monstro,1300,678);
    Texture2D Quartotx = LoadTextureFromImage(Quarto);
    Texture2D Jorgetx = LoadTextureFromImage(Jorgeim);
    Texture2D Karoltx = LoadTextureFromImage(Karolim);
    Texture2D Guilhermetx = LoadTextureFromImage(Guilhermeim);
    Texture2D memoriastx = LoadTextureFromImage(memoriasim);
    Texture2D falatx = LoadTextureFromImage(fala);
    Texture2D monstrotx = LoadTextureFromImage(monstro);
    
    //"cortando" a textura para usar só parte dela:
    Rectangle Jorgerec = {0,0,53,102};// testando o tamanho do boneco no mapa (pegando só esse retângulo)
    Rectangle Karolrec = {0,0,55,102}; // Esta ok
    Rectangle Guilhermerec = {0,0,55,102}; //se desejar aumentar manter a proporção para os 3 bonecos (usar multiplo)
    Rectangle memoriasrec = {0,0,30,20}; //ok!
    Rectangle memoriassadrec = {30,20,30,20}; //ok!
    Rectangle conflitorec = {60,40,35,20};
    Rectangle monstrorec = {0,0,90,90};
    //criando colisão e retângulo de movimentação...
    Rectangle estante = {330,116,979,180}; //colisão para a estante
    Rectangle Jorger = {17,400,53,51}; //um retângulo de colisão que representa Jorge (metade da altura para colidir com o pé)
    Rectangle memoria1 = {500,325,20,3};
    Rectangle memoria2 = {600,325,20,3};
    Rectangle memoria3 = {600,525,20,5};
    Rectangle memoriasad1 = {800,600,20,5};
    Rectangle conflito = {930,300,70,80};
    Rectangle mesa = {525,405,305,100};
    Rectangle pe1= {570,515,20,15};
    Rectangle pe2= {790,515,20,15};
    Rectangle lixo = {1070,304,113,20};
    Rectangle parede1 = {0,0,190,340};
    Rectangle parede2 = {1166,0,190,340};
    Rectangle parede3 = {221,304,55,20};
    Rectangle parede4 = {0,669,190,340};
    Rectangle parede5 = {1166,669,190,340};
    
    
    //posição das memórias:
    Vector2 memoriasp = {500,325}; //ferias com a família
    Vector2 memoriasp2 = {600,325}; //ganhou um ps4
    Vector2 memoriasp3 = {600,525}; //passou de ano
    Vector2 memoriaspsad1 = {800,600}; //perdeu contato com um amigo querido
    Vector2 conflitop = {900,300};
    //variáveis :
    int memoria=0;
    int stress=0;
    int sad=0;
    int desafio=0;
    int batalha=-1;
    int ruim=0;
    int desenharmemoria[6]={1,1,1,1,1,1};
    
    while (!WindowShouldClose())   
    {
         
         Vector2 Jorgep = {Jorger.x,Jorger.y-51}; //posição do Jorge (menos 51 para a colisão ficar no pé)
         //Vector2 Karolp = {circulo1.posicaox+100,circulo1.posicaoy+49};
        // Vector2 Guilhermep = {circulo1.posicaox+100,circulo1.posicaoy+49};
         
         //Posição do mouse na tela
         int x = GetMouseX();
         int y = GetMouseY();
        
         //função de movimentação:
         movimentacao(&Jorger);
        //Checando se saiu do mapa:
        tamanhotela(&Jorger,screenHeight,screenWidth);
        
        //checando colisão:
        if(CheckCollisionRecs(Jorger,estante)==1)
        {
            Jorger.y+=4;
            if(memoria==1 && IsKeyPressed(KEY_ENTER)==1)
            {
                stress--;
                memoria=0;
            }
        }
        else if(CheckCollisionRecs(Jorger,mesa)==1 ||CheckCollisionRecs(Jorger,pe1)==1|| CheckCollisionRecs(Jorger,pe2)==1)
        {
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,parede1)==1 ||CheckCollisionRecs(Jorger,parede2)==1)
        {
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,parede3))
        {
            colisao(&Jorger); 
        }
        else if(CheckCollisionRecs(Jorger,parede4) || CheckCollisionRecs(Jorger,parede5))
        {
            colisao(&Jorger); 
        }
        else if(CheckCollisionRecs(Jorger,memoria1)==1)
        {
            if(IsKeyPressed(KEY_ENTER)==1 && memoria==0)
            {
                 desenharmemoria[0]=0;
                 memoria=1;
                 memoria1.x=0;
                 memoria1.y=0;
            }
            
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,memoria2)==1)
        {
            if(IsKeyPressed(KEY_ENTER)==1 && memoria==0)
            {
                 desenharmemoria[1]=0;
                 memoria=1;
                 memoria2.x=0;
                 memoria2.y=0;
            }
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,memoria3))
        {
            if(IsKeyDown(KEY_ENTER)==1 && memoria==0)
            {
                 desenharmemoria[2]=0;
                 memoria=1;
                 memoria3.x=0;
                 memoria3.y=0;
            }
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,conflito))
        {
            if(IsKeyDown(KEY_ENTER))
            {
                 
                 memoria=1;
                 batalha=1;
                 desafio=1;
                 
                
            }
            colisao(&Jorger);
        }
        else if(CheckCollisionRecs(Jorger,memoriasad1))
        {
            if(IsKeyDown(KEY_ENTER)==1 && memoria==0)
            {
                 desenharmemoria[3]=0;
                 memoria=1;
                 memoriasad1.x=0;
                 memoriasad1.y=0;
            }
            colisao(&Jorger);
        }
        else if (CheckCollisionRecs(Jorger,lixo))
        {
           if(IsKeyPressed(KEY_ENTER)==1 && memoria==1)
            {
                if(sad==1)
                {
                    stress--;
                }
                else
                {
                    stress++;
                }
                 memoria=0;
            }
            colisao(&Jorger); 
        }    
       
        
        
        //parte gráfica:
        BeginDrawing();
           ClearBackground(WHITE);
           DrawTexture(Quartotx,0,0,RAYWHITE);
           //DrawTexture(circulo1.posicaox,circulo1.posicaoy,RAYWHITE);
           //DrawTextureRec(Texture2D texture, Rectangle sourceRec, Vector2 position, Color tint); 
           DrawText(TextFormat("%i %i",x,y),500,450,40,RED);
           DrawText(TextFormat("%i",memoria),500,500,40,RED);
           DrawText(TextFormat("%i %i",batalha,desafio),500,550,40,RED);
          
           //DrawTextureRec(Karoltx,Karolrec,Karolp,RAYWHITE);
           //DrawTextureRec(Guilhermetx,Guilhermerec,Guilhermep,RAYWHITE);
           
           // desenhando memórias:
           if(desenharmemoria[0]==1)
           {
              DrawTextureRec(memoriastx,memoriasrec,memoriasp,RAYWHITE); 
           }
           if(desenharmemoria[1]==1)
           {
              DrawTextureRec(memoriastx,memoriasrec,memoriasp2,RAYWHITE);
           }
           if(desenharmemoria[2]==1)
           {
              DrawTextureRec(memoriastx,memoriasrec,memoriasp3,RAYWHITE);
           }
           if(desenharmemoria[3]==1)
           {
              DrawTextureRec(memoriastx,memoriassadrec,memoriaspsad1,RAYWHITE);
           }
           if(desenharmemoria[4]==1)
           {
              DrawTextureRec(monstrotx,monstrorec,conflitop,RAYWHITE);
           }
           if(desafio==1)
           {
               
               if(batalha>=1)
               {
                   batalhafuncao(falatx,&ruim,&batalha);
                   
               }
               if(batalha==0)
               {
                   desenharmemoria[4]=0;
               }
               if(batalha==0 && ruim>0)
               {
                   if(desenharmemoria[5]==1)
                   {
                      DrawTextureRec(memoriastx,memoriasrec,conflitop,RAYWHITE); 
                   }
                  
                 
               }    
               else if(batalha==0 && ruim>=0)
               {
                   if(desenharmemoria[5]==1)
                   {
                      DrawTextureRec(memoriastx,memoriassadrec,conflitop,RAYWHITE);
                   }
                   
               }
               
           }
           DrawTextureRec(Jorgetx,Jorgerec,Jorgep,RAYWHITE);
        EndDrawing();
    }
    CloseWindow();
    return 0;
}
